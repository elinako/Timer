{"version":3,"sources":["Timer.js","App.js","index.js"],"names":["Timer","startTime","Date","now","Observable","subscriber","setInterval","deltaTime","next","interval","clearInterval","Container","styled","div","App","state","hours","min","sec","startTimer","setState","subscribe","value","getUTCHours","getMinutes","getSeconds","resetTimer","this","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAqBeA,EAnBD,WACZ,IAAMC,EAAYC,KAAKC,MAevB,OAZQ,IAAIC,KAAW,SAACC,GAOtB,OANAC,aAAY,WACV,IACMC,EADcL,KAAKC,MACOF,EAChCI,EAAWG,KAAK,IAAIN,KAAKK,MACxB,KAEI,SAAqBE,GAC1BC,cAAcD,Q,yFCVpB,IAAME,E,MAAYC,EAAOC,IAAV,KAkDAC,E,4MA7CbC,MAAQ,CACNC,MAAO,KACPC,IAAK,KACLC,IAAK,M,EAGPC,WAAa,WACX,EAAKC,SAAS,CACZJ,MAAO,KACPC,IAAK,KACLC,IAAK,OAGPlB,IAAQqB,WAAU,SAACC,GACjB,EAAKF,SAAS,CACZJ,MAAOM,EAAMC,cACbN,IAAKK,EAAME,aACXN,IAAKI,EAAMG,mB,EAKjBC,WAAa,a,uDAIH,IAAD,EACqBC,KAAKZ,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,IAAKC,EADb,EACaA,IACpB,OACE,qCACE,eAACP,EAAD,WACE,4BAAIK,EAAQ,EAAIA,EAAQ,OACxB,kCACA,4BAAIC,EAAM,EAAIA,EAAM,OACpB,kCACA,4BAAIC,EAAM,EAAIA,EAAM,UAEtB,wBAAQU,QAASD,KAAKR,WAAtB,mBACA,0CACA,wBAAQS,QAASD,KAAKD,WAAtB,0B,GAxCUG,aCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e26a422b.chunk.js","sourcesContent":["import { Observable } from \"rxjs\";\r\n\r\nconst Timer = () => {\r\n  const startTime = Date.now();\r\n  let timer = {};\r\n\r\n  timer = new Observable((subscriber) => {\r\n    setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const deltaTime = currentTime - startTime;\r\n      subscriber.next(new Date(deltaTime));\r\n    }, 1000);\r\n\r\n    return function unsubscribe(interval) {\r\n      clearInterval(interval);\r\n    };\r\n  });\r\n\r\n  return timer;\r\n};\r\n\r\nexport default Timer;\r\n","import { Component } from \"react\";\nimport Timer from \"./Timer\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nclass App extends Component {\n  state = {\n    hours: \"00\",\n    min: \"00\",\n    sec: \"00\",\n  };\n\n  startTimer = () => {\n    this.setState({\n      hours: \"00\",\n      min: \"00\",\n      sec: \"00\",\n    });\n\n    Timer().subscribe((value) => {\n      this.setState({\n        hours: value.getUTCHours(),\n        min: value.getMinutes(),\n        sec: value.getSeconds(),\n      });\n    });\n  };\n\n  resetTimer = () => {\n    // Timer().unsubscribe(Timer());\n  };\n\n  render() {\n    const { hours, min, sec } = this.state;\n    return (\n      <>\n        <Container>\n          <p>{hours > 0 ? hours : \"00\"}</p>\n          <p>:</p>\n          <p>{min > 0 ? min : \"00\"}</p>\n          <p>:</p>\n          <p>{sec > 0 ? sec : \"00\"}</p>\n        </Container>\n        <button onClick={this.startTimer}>start</button>\n        <button>wait</button>\n        <button onClick={this.resetTimer}>reset</button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}